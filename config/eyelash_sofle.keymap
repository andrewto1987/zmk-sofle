#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <14 28 40>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC         &kp N1        &kp N2        &kp N3        &kp N4  &kp N5       &kp UP_ARROW     &kp N6     &kp N7  &kp N8     &kp N9     &kp N0      &kp BACKSPACE
&kp TAB         &kp Q         &kp W         &kp E         &kp R   &kp T        &kp DOWN_ARROW   &kp Y      &kp U   &kp I      &kp O      &kp P       &kp BSLH
&kp LEFT_SHIFT  &kp A         &kp S         &kp D         &kp F   &kp G        &kp LEFT_ARROW   &kp H      &kp J   &kp K      &kp L      &kp SEMI    &kp APOS
&kp LCTRL       &kp Z         &kp X         &kp C         &kp V   &kp B        &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA  &kp DOT    &kp FSLH    &kp ENTER
&kp C_MUTE      &kp CAPSLOCK  &kp LEFT_GUI  &kp LEFT_ALT  &mo 1   &kp SPACE    &kp ENTER        &kp SPACE  &mo 2   &kp MINUS  &kp EQUAL  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "Couche0";
        };

        layer1 {
            bindings = <
&kp GRAVE      &kp F1            &kp F2              &kp F3           &kp F4      &kp F5             &mmv MOVE_UP     &kp F6    &kp F7     &kp F8      &kp F9     &kp F10    &kp F11
&kp BACKSPACE  &kp NUMBER_6      &kp N7              &kp N8           &kp N9      &kp N0             &mmv MOVE_DOWN   &trans    &kp PG_UP  &kp UP      &kp PG_DN  &kp PSCRN  &kp F12
&trans         &kp LEFT_BRACKET  &kp RIGHT_BRACKET   &kp F6           &kp F10     &kp F11            &mmv MOVE_LEFT   &kp HOME  &kp LEFT   &kp DOWN    &kp RIGHT  &trans     &trans
&kp RET        &tog 3            &kp LA(LC(DELETE))  &out OUT_TOG     &bt BT_PRV  &bt BT_NXT         &mmv MOVE_RIGHT  &kp END   &mkp MCLK  &mkp RCLK   &kp INS    &trans     &trans
&kp C_MUTE     &rgb_ug RGB_BRD   &rgb_ug RGB_BRI     &rgb_ug RGB_EFF  &trans      &rgb_ug RGB_TOG    &mkp LCLK        &trans    &trans     &kp C_MENU  &trans     &trans
            >;

            display-name = "Couche1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer2 {
            bindings = <
&kp TILDE  &kp F1        &kp F2          &kp F3       &kp F4  &kp F5    &mmv MOVE_UP     &kp F6     &kp F7     &kp F8        &kp F9     &kp F10      &kp F11
&trans     &bt BT_CLR    &bt BT_CLR_ALL  &trans       &trans  &trans    &mmv MOVE_DOWN   &trans     &kp PG_UP  &kp UP_ARROW  &kp PG_DN  &kp PSCRN    &kp F12
&trans     &out OUT_USB  &out OUT_BLE    &trans       &trans  &trans    &mmv MOVE_LEFT   &kp HOME   &kp LEFT   &kp DOWN      &kp RIGHT  &trans       &trans
&trans     &sys_reset    &trans          &bootloader  &trans  &trans    &mmv MOVE_RIGHT  &kp END    &mkp MB4   &mkp MCLK     &mkp RCLK  &bootloader  &sys_reset
&trans     &trans        &trans          &trans       &mo 3   &trans    &mkp LCLK        &soft_off  &trans     &trans        &trans     &trans
            >;

            display-name = "Couche2";
            sensor-bindings = <&scroll_encoder>;
        };

        layer3 {
            bindings = <
&kp K_POWER     &kp K_SLEEP      &kp K_PWR        &trans           &trans                &kp K_LOCK              &trans  &trans           &trans           &trans           &trans  &trans  &trans
&msc SCRL_UP    &mkp LCLK        &mmv MOVE_UP     &mkp RCLK        &trans                &kp PSCRN               &trans  &trans           &trans           &trans           &trans  &trans  &trans
&msc SCRL_DOWN  &mmv MOVE_LEFT   &mmv MOVE_DOWN   &mmv MOVE_RIGHT  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC    &trans  &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &trans  &trans  &trans
&soft_off       &tog 4           &bt BT_CLR       &kp K_MUTE       &kp C_VOL_DN          &kp C_VOL_UP            &trans  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &trans  &trans  &trans
&trans          &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &tog 3                &trans                  &trans  &trans           &trans           &trans           &trans  &trans
            >;

            display-name = "Couche3";
        };

        layer4 {
            bindings = <
&kp MINUS      &kp EQUAL   &kp F7     &kp F8         &kp F9   &kp F12          &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp BACKSLASH  &kp Y       &kp U      &kp I          &kp O    &kp P            &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans         &kp H       &kp J      &kp K          &kp L    &kp SEMICOLON    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&kp SQT        &kp N       &kp M      &kp COMMA      &kp DOT  &kp SLASH        &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans         &kp DELETE  &kp RCTRL  &kp RIGHT_ALT  &tog 4   &trans           &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
